{
  "shared": {
    "responses": {
      "notFound": "Data not found!",
      "successGet": "Data get successfully",
      "successPost": "Data created successfully",
      "successPut": "Data updated successfully",
      "successDelete": "Data deleted successfully",
      "success": "Successfully",
      "loginSuccess": "Login successfully!",
      "loginFailed": "Login failed!",
      "registerSuccess": "Register successfully!"
    },
    "validations": {
      "isUnique": "{property} has already been taken",
      "isDefined": "{property} should not be null or undefined",
      "isEmpty": "{property} should not be empty",
      "isNotEmpty": "{property} should not be empty",
      "isBoolean": "{property} must be a boolean value",
      "isDate": "{property} must be a Date instance",
      "isString": "{property} must be a string",
      "isNumber": "{property} must be a number",
      "isInt": "{property} must be an integer number",
      "isEnum": "{property} must be a valid enum value",
      "isEmail": "{property} must be an email",
      "isMobilePhone": "{property} must be a mobile phone number",
      "isUrl": "{property} must be a URL",
      "isUuid": "{property} must be a UUID",
      "isDateString": "{property} must be a valid ISO 8601 date string",
      "isCreditCard": "{property} must be a credit card",
      "isAscii": "{property} must contain only ASCII characters",
      "isBase64": "{property} must be a base64 encoded string",
      "isJson": "{property} must be a JSON string",
      "isLowercase": "{property} must be a lowercase string",
      "isUppercase": "{property} must be an uppercase string",
      "isAlphanumeric": "{property} must contain only letters and numbers",
      "isHash": "{property} must be a hash",
      "isHexColor": "{property} must be a hexadecimal color",
      "isPostalCode": "{property} must be a postal code",
      "isMimeType": "{property} must be a valid MIME type",
      "isIsbn": "{property} must be an ISBN",
      "isMilitaryTime": "{property} must be in military time format",
      "isPhoneNumber": "{property} must be a phone number",
      "isIban": "{property} must be an IBAN",
      "isIso8601": "{property} must be a valid ISO 8601 date string",
      "isIso31661Alpha2": "{property} must be a valid ISO 3166-1 alpha-2 code",
      "isIso31661Alpha3": "{property} must be a valid ISO 3166-1 alpha-3 code",
      "isMongoId": "{property} must be a MongoDB ID",
      "isCurrency": "{property} must be a currency",
      "isJwt": "{property} must be a JWT",
      "isPortalCode": "{property} must be a portal code",
      "isPort": "{property} must be a port number",
      "isUuidVersion": "{property} must be a valid UUID version",
      "isVariableWidth": "{property} must contain both full and half-width chars",
      "isWhitelisted": "{property} contains invalid characters",
      "contains": "{property} must contain a {constraint1} string",
      "notContains": "{property} should not contain a {constraint1} string",
      "equals": "{property} must be equal to {constraint1}",
      "notEquals": "{property} should not be equal to {constraint1}",
      "is": "{property} must be a {constraint1}",
      "isNot": "{property} should not be a {constraint1}",
      "isIn": "{property} must be one of the following values: {constraint1}",
      "isNotIn": "{property} should not be one of the following values: {constraint1}",
      "isDivisibleBy": "{property} must be divisible by {constraint1}",
      "isPositive": "{property} must be a positive number",
      "isNegative": "{property} must be a negative number",
      "min": "{property} with value: \"{value}\" needs to be at least {constraints.0}, otherwise {message}",
      "max": "{property} with value: \"{value}\" needs to be at most {constraints.0}, otherwise {message}",
      "minDate": "{property} must not be earlier than {constraint1}",
      "maxDate": "{property} must not be later than {constraint1}",
      "arrayContains": "{property} must contain {constraint1}",
      "arrayNotContains": "{property} should not contain {constraint1}",
      "arrayNotEmpty": "{property} should not be empty",
      "arrayMinSize": "{property} must contain at least {constraint1} elements",
      "arrayMaxSize": "{property} must contain at most {constraint1} elements",
      "arrayUnique": "{property} must contain only unique elements"
    },
    "month": {
      "0": "January",
      "1": "February",
      "2": "March",
      "3": "April",
      "4": "May",
      "5": "June",
      "6": "July",
      "7": "August",
      "8": "September",
      "9": "October",
      "10": "November",
      "11": "December"
    },
    "day1": {
      "0": "Sunday",
      "1": "Monday",
      "2": "Tuesday",
      "3": "Wednesday",
      "4": "Thursday",
      "5": "Friday",
      "6": "Saturday"
    },
    "errors": {
      "fileValidationFormat": "Only {extension} file are allowed!",
      "fileValidationMax": "File too large, maximum size is {maximum}",
      "dataExist": "Already exists for the given parameter",
      "notFound": "Data {entity} not found!",
      "notFoundId": "Data {entity} with ID {id} not found!",
      "notFoundCode": "Data {entity} with Code {code} not found!",
      "relationExists": "{entity} can't be deleted because its have relations!",
      "duplicateData": "Data {context} with {field} already exists!"
    }
  },
  "auth": {
    "errors": {
      "userNotFound": "User not found",
      "errorLogin": "Username or password wrong!",
      "usernameExists": "Username already exist!",
      "passwordNotMatch": "Your password does not match!",
      "invalidApiKey": "Invalid API key"
    }
  }
}
